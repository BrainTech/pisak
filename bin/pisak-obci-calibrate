#!/usr/bin/env python3

"""
Script to run PISAK OBCI calibration.
"""

if __name__ == "__main__":
    import pisak
    from pisak import app_manager
    from pisak.obci import scanner, communication, widgets

    import pisak.obci.widgets  # @UnusedImport


    pisak.init()

    def prepare_main_view(app, window, script, data):
        """
        View preparator.

        :param app: reference to the application, :see: :module:`pisak.application`.
        :param window: application main window, :class:`pisak.window.Window` instance.
        :param script: ClutterScript with the view description.
        :param data: some specific data.
        """
        if not data or ('init' not in data) or data['init']:
            communication.create_ws_client(window, 'obci-calibrate/main')
        else:
            container = script.get_object('main')
            first_condition = lambda container: container.get_children()
            second_condition = lambda container: [
                item if isinstance(item, widgets.CalibrationLabel) else
                item.get_children()[0] for item in container.get_children()]
            obci_scanner = scanner.Scanner(
                data['ws_client'], container, first_condition, second_condition,
                scanning_interval=175, scanning_jitter=25,
                highlight_duration=100, highlight_jitter=0)
            strategy_duration = 120000  # 2 minutes
            obci_scanner.run_scenario([(('row', 'order'), strategy_duration)])

    calibration_app = {
        "app": "obci-calibrate",
        "type": "clutter",
        "views": [("main", prepare_main_view)]
    }

    @communication.handle_obci_scenario
    def run_app():
       app_manager.run(calibration_app)

    run_app()